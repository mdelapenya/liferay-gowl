// Copyright (c) 2000-present Liferay, Inc. All rights reserved.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2.1 of the License, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
// details.

package docker

import internal "github.com/mdelapenya/lpn/internal"

// MySQL represents a MySQL image
type MySQL struct {
	LpnType string
	Tag     string
}

// GetContainerName returns the name of the container generated by this type of image
func (m MySQL) GetContainerName() string {
	return internal.LpnConfig.GetDbContainerName(m.GetLpnType()) + "-" + m.GetType()
}

// GetDataFolder returns the data folder for the database
func (m MySQL) GetDataFolder() string {
	return "/var/lib/mysql"
}

// GetEnvVariables returns the specific environment variables to configure the docker image
func (m MySQL) GetEnvVariables() EnvVariables {
	return EnvVariables{
		Database: "MYSQL_DATABASE=" + DBName,
		Password: "MYSQL_ROOT_PASSWORD=" + DBPassword,
		User:     "MYSQL_USER=" + DBUser,
	}
}

// GetJDBCConnection returns the JDBC connection
func (m MySQL) GetJDBCConnection() JDBCConnection {
	return JDBCConnection{
		DriverClassName: "com.mysql.jdbc.Driver",
		Password:        DBPassword,
		URL:             "jdbc:mysql://" + GetAlias() + "/" + DBName + "?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&useFastDateParsing=false&useUnicode=true",
		User:            DBUser,
	}
}

// GetFullyQualifiedName returns the fully qualified name of the image
func (m MySQL) GetFullyQualifiedName() string {
	return m.GetRepository() + ":" + m.GetTag()
}

// GetLpnType returns the type of the lpn image
func (m MySQL) GetLpnType() string {
	return m.LpnType
}

// GetPort returns the bind port of the service
func (m MySQL) GetPort() int {
	return 3306
}

// GetRepository returns the repository for MySQL
func (m MySQL) GetRepository() string {
	return internal.LpnConfig.GetDbImageName("mysql")
}

// GetTag returns the tag of the image
func (m MySQL) GetTag() string {
	if m.Tag == "" {
		return internal.LpnConfig.GetDbImageTag("mysql")
	}

	return m.Tag
}

// GetType returns the type of the image
func (m MySQL) GetType() string {
	return "mysql"
}

// Copyright (c) 2000-present Liferay, Inc. All rights reserved.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2.1 of the License, or (at your option)
// any later version.
//
// This library is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
// details.

package liferay

import internal "github.com/liferay/lpn/internal"

// CE implementation for Liferay CE official images
type CE struct {
	Tag string
}

// GetContainerName returns the name of the container generated by this type of image
func (c CE) GetContainerName() string {
	return internal.LpnConfig.GetPortalContainerName("ce")
}

// GetDeployFolder returns the deploy folder under Liferay Home
func (c CE) GetDeployFolder() string {
	return c.GetLiferayHome() + "/deploy"
}

// GetDockerHubTagsURL returns the URL of the available tags on Docker Hub
func (c CE) GetDockerHubTagsURL() string {
	return "liferay/portal"
}

// GetFullyQualifiedName returns the fully qualified name of the image
func (c CE) GetFullyQualifiedName() string {
	return c.GetRepository() + ":" + c.GetTag()
}

// GetLiferayHome returns the Liferay home for CE
func (c CE) GetLiferayHome() string {
	return "/opt/liferay"
}

// GetRepository returns the repository for CE
func (c CE) GetRepository() string {
	return internal.LpnConfig.GetPortalImageName("ce")
}

// GetTag returns the tag of the image
func (c CE) GetTag() string {
	return c.Tag
}

// GetType returns the type of the image
func (c CE) GetType() string {
	return "ce"
}

// GetUser returns the user running the main application
func (c CE) GetUser() string {
	return "liferay"
}
